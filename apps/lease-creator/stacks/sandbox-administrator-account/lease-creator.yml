Transform:
  - AWS::LanguageExtensions
  - AWS::Serverless-2016-10-31
Description: Infrastructure for aws-sandbox-accounts lease-creator
Parameters:
  Environment:
    Description: The infrastructure environment
    Type: String
    AllowedValues:
      - test
      - live
Resources:
  StateMachineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: states.amazonaws.com
      Policies:
        - PolicyName: state-machine-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
                - Effect: Allow
                  Action:
                  - lambda:InvokeFunction
                  Resource:
                  - !Sub "arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:${Environment}-aws-sandbox-accounts-db-client"
                  - !Sub "arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:${Environment}-aws-sandbox-accounts-auth-client"
                - Effect: Allow
                  Action:
                  - events:PutTargets
                  - events:PutRule
                  - events:DescribeRule
                  Resource:
                  - !Sub arn:${AWS::Partition}:events:${AWS::Region}:${AWS::AccountId}:rule/StepFunctionsGetEventsForStepFunctionsExecutionRule
                - Effect: Allow
                  Action:
                  - states:Describe*
                  - states:Get*
                  - states:List*
                  - states:Send*
                  Resource:
                  - "*"
                - Effect: Allow
                  Action:
                  - states:StartExecution
                  - states:StartSyncExecution
                  Resource:
                  - !Sub "arn:${AWS::Partition}:states:${AWS::Region}:${AWS::AccountId}:stateMachine:${Environment}-aws-sandbox-accounts-account-cleaner"
                - Effect: Allow
                  Action:
                  - states:StopExecution
                  Resource:
                  - !Sub "arn:${AWS::Partition}:states:${AWS::Region}:${AWS::AccountId}:stateMachine:${Environment}-aws-sandbox-accounts-account-cleaner:*"
  StateMachine:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      StateMachineName: !Sub "${Environment}-aws-sandbox-accounts-lease-creator"
      RoleArn: !GetAtt StateMachineRole.Arn
      # Use DefinitionString rather than Definition so that we can use null values
      DefinitionString:
        Fn::ToJsonString:
          StartAt: ClaimAvailableAccount
          States:
            ClaimAvailableAccount:
              Type: Task
              Resource: arn:aws:states:::lambda:invoke
              Next: WritePendingLease
              Parameters:
                FunctionName: !Sub "${Environment}-aws-sandbox-accounts-db-client"
                Payload:
                  action: claim_available_account
              OutputPath: $.Payload
            WritePendingLease:
              Type: Task
              Resource: arn:aws:states:::lambda:invoke
              Next: CreateLease
              Parameters:
                FunctionName: !Sub "${Environment}-aws-sandbox-accounts-db-client"
                Payload:
                  action: write_active_lease
                  params:
                    lease_id.$: States.UUID()
                    user_id.$: $$.Execution.Input.user_id
                    duration.$: $$.Execution.Input.duration
              ResultSelector:
                result:
                  lease_id.$: $.Payload.lease_id
                  account_id.$: $.Payload.account_id
                  user_id.$: $.Payload.user_id
              OutputPath: $.result
            CreateLease:
              Type: Task
              Resource: arn:aws:states:::lambda:invoke
              Next: WriteActiveLease
              Parameters:
                FunctionName: !Sub "${Environment}-aws-sandbox-accounts-auth-client"
                Payload:
                  action: create_lease
                  params:
                    account.$: States.ArrayGetItem($, 0)
                    user_id.$: $$.Execution.Input.user_id
                    duration.$: $$.Execution.Input.duration
              ResultSelector:
                result:
                  lease_id.$: States.UUID()
                  account_id.$: $.Payload.account_id
                  user_id.$: $.Payload.user_id
                  expires.$: $.Payload.expires
              OutputPath: $.result
            WriteActiveLease:
              Type: Task
              Resource: arn:aws:states:::lambda:invoke
              End: true
              Parameters:
                FunctionName: !Sub "${Environment}-aws-sandbox-accounts-db-client"
                Payload:
                  action: write_active_lease
                  params:
                    lease_id.$: $.lease_id
                    account_id.$: $.account_id
                    user_id.$: $.user_id
                    expires.$: $.expires
