Transform: AWS::Serverless-2016-10-31
Description: Infrastructure for aws-sandbox-accounts API
Parameters:
  Environment:
    Description: The infrastructure environment
    Type: String
    AllowedValues:
      - test
      - live
Resources:
  FunctionExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      RoleName: !Sub "${Environment}-aws-sandbox-accounts-api"
      Policies:
        - PolicyName: lambda-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
                - Effect: Allow
                  Action:
                    - dynamodb:GetItem
                    - dynamodb:BatchGetItem
                    - dynamodb:PutItem
                    - dynamodb:UpdateItem
                  Resource:
                    - !Sub "arn:${AWS::Partition}:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${Environment}-aws-sandbox-accounts-account-pool"
  Function:
    Type: AWS::Serverless::Function
    Properties:
      Handler: aws_sandbox_accounts_api.main.handler
      Runtime: python3.11
      CodeUri: ../../build
      Role: !GetAtt FunctionExecutionRole.Arn
      FunctionName: !Sub "${Environment}-aws-sandbox-accounts-api"
      MemorySize: 256
      Timeout: 120
      Tracing: Active
      Environment:
        Variables:
          TABLE_NAME: !Sub "${Environment}-aws-sandbox-accounts-account-pool"
