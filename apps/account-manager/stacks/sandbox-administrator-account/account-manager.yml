Transform: AWS::Serverless-2016-10-31
Description: Infrastructure for aws-sandbox-accounts account-manager
Parameters:
  Environment:
    Description: The infrastructure environment
    Type: String
    AllowedValues:
      - test
      - live
Resources:
  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
      ManagedPolicyArns:
        - !ImportValue ci-infrastructure-codebuild-base-iam-policy
  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: NO_ARTIFACTS
      TimeoutInMinutes: 10
      Description: runs aws-nuke against sandbox accounts
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:7.0
        Type: LINUX_CONTAINER
      Name: !Sub "${Environment}-aws-sandbox-accounts-aws-nuke"
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Source:
        Type: GITHUB
        Location: https://github.com/AlexChesters/aws-sandbox-accounts.git
        BuildSpec: apps/account-manager/buildspec.yml
  StateMachineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: states.amazonaws.com
      Policies:
        - PolicyName: state-machine-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
                - Effect: Allow
                  Action:
                    - dynamodb:query
                  Resource:
                    - !Sub "arn:${AWS::Partition}:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${Environment}-aws-sandbox-accounts-account-pool/index/status"
                - Effect: Allow
                  Action:
                    - codebuild:StartBuild
                  Resource:
                    - !GetAtt CodeBuildProject.Arn
  StateMachine:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      StateMachineName: !Sub "${Environment}-aws-sandbox-accounts-account-manager"
      RoleArn: !GetAtt StateMachineRole.Arn
      Definition:
        StartAt: FetchAccounts
        States:
          FetchAccounts:
            Type: Task
            Resource: arn:aws:states:::aws-sdk:dynamodb:query
            Next: ProcessAccounts
            Parameters:
              TableName: !Sub "${Environment}-aws-sandbox-accounts-account-pool"
              IndexName: status
              KeyConditionExpression: "#pk = :pk AND #sk = :st"
              ExpressionAttributeNames:
                "#pk": pk
                "#sk": status
              ExpressionAttributeValues:
                :pk:
                  S: account
                :st:
                  S: initial
            OutputPath: $.Items
          ProcessAccounts:
            Type: Map
            End: true
            ItemProcessor:
              ProcessorConfig:
                Mode: INLINE
              StartAt: AWSNuke
              States:
                AWSNuke:
                  Type: Task
                  Resource: arn:aws:states:::codebuild:startBuild.sync
                  End: true
                  Parameters:
                    ProjectName: !Ref CodeBuildProject
                    EnvironmentVariablesOverride:
                      - Type: PLAINTEXT
                        Name: ACCOUNT_ID
                        Value.$: $$.Map.Item.Value.sk.S
