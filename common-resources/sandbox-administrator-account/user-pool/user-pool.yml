Description: user pool
Parameters:
  Environment:
    Description: The infrastructure environment
    Type: String
    AllowedValues:
      - test
      - live
  ArtifactId:
    Description: The artifact id
    Type: String
Conditions:
  IsTest: !Equals [!Ref Environment, test]
Mappings:
  EnvMap:
    test:
      DomainName: test.sandbox.alexchesters.com
      CertificateArn: arn:aws:acm:us-east-1:654654632738:certificate/70256477-fc21-4c14-8221-5418dead7355
    live:
      DomainName: sandbox.alexchesters.com
      CertificateArn: arn:aws:acm:us-east-1:654654632738:certificate/6c88683f-84d6-40ea-a1e2-64cf3e9be287
Resources:
  UserPool:
    Type: AWS::ServiceCatalog::CloudFormationProvisionedProduct
    Properties:
      ProductId: prod-3t5ume4gyzufa
      ProvisionedProductName: !Sub "${Environment}-user-pool"
      ProvisioningArtifactId: !Ref ArtifactId
      ProvisioningParameters:
        - Key: DeletionPolicy
          Value: Delete
        - Key: UpdateReplacePolicy
          Value: Delete
        - Key: UserPoolName
          Value: !Sub "${Environment}-user-pool"
        - Key: AllowAdminCreateUserOnly
          Value: "true"
        - Key: EmailAddresses
          Value: !If
            - IsTest
            - "walter@cheste.rs"
            - "alex@cheste.rs"
        - Key: ExportNamePrefix
          Value: !Ref Environment
  UserPoolDomain:
    Type: AWS::Cognito::UserPoolDomain
    Properties:
      Domain: !Sub
        - "auth.${Domain}"
        - Domain: !FindInMap [EnvMap, !Ref Environment, DomainName]
      CustomDomainConfig:
        CertificateArn: !FindInMap [EnvMap, !Ref Environment, CertificateArn]
      UserPoolId: !GetAtt UserPool.Outputs.UserPoolId
